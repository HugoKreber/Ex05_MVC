@using Ex05_MVC.BO
@model Ex05_MVC.Models.OrderViewModel
@using Microsoft.AspNetCore.Mvc.Rendering;

<h1>Create</h1>
<hr />

@if (TempData["error"] != null && TempData["error"] is List<string> errors)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in errors)
            {
                <li>@error</li>
            }
        </ul>
    </div>
}



<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="CustomerName" class="control-label"></label>
                <input asp-for="CustomerName" class="form-control" />
                <span asp-validation-for="CustomerName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ShippingAddress" class="control-label"></label>
                <input asp-for="ShippingAddress" class="form-control" />
                <span asp-validation-for="ShippingAddress" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="TotalAmount" class="control-label"></label>
                <input asp-for="TotalAmount" class="form-control" required />
                <span asp-validation-for="TotalAmount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="WarehouseId" class="control-label"></label>
                <select asp-for="WarehouseId" class="form-control">
                    <option value="">-- Select a Warehouse --</option>
                    @if (ViewData["WarehouseOptions"] != null){
                    foreach (var warehouse in (IEnumerable<dynamic>)ViewData["WarehouseOptions"])
                    {
                        <option value="@warehouse.Value">@warehouse.Text</option>
                    }
                    }
                </select>
                <span asp-validation-for="WarehouseId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderStatus" class="control-label"></label>
                <select asp-for="OrderStatus" class="form-control" asp-items="Html.GetEnumSelectList<OrderStatusEnum>()"></select>
                <span asp-validation-for="OrderStatus" class="text-danger"></span>
            </div>

            <h4>Order Details</h4>
            <div class="order-detail-item">
                <label>Article</label>
                <select class="form-control" name="OrderDetails[0].ArticleId" onchange="updateArticleDetails(this)">
                    <option value="">-- Select an article --</option>
                    @if (ViewData["ArticleOptions"] != null)
                    {
                        foreach (var article in (IEnumerable<dynamic>)ViewData["ArticleOptions"])
                        {
                            <option value="@article.Value" data-name="@article.Name" data-description="@article.Desc" data-price="@article.Price">@article.Name</option>
                        }
                    }
                </select>
                
                <div class="form-group">
                    <label>Nom de l'article</label>
                    <input class="form-control" name="OrderDetails[0].Article.Name" type="text" readonly />
                    <span asp-validation-for="OrderDetails[0].Article.Name" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Description de l'article</label>
                    <input class="form-control" name="OrderDetails[0].Article.Description" type="text" readonly />
                    <span asp-validation-for="OrderDetails[0].Article.Description" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Prix unitaire (€)</label>
                    <input class="form-control" name="OrderDetails[0].UnitPrice" type="text" readonly />
                    <span asp-validation-for="OrderDetails[0].UnitPrice" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Quantité</label>
                    <input class="form-control" name="OrderDetails[0].Quantity" type="number" min="1" />
                    <span asp-validation-for="OrderDetails[0].Quantity" class="text-danger"></span>
                </div>


            </div>

            <div id="orderDetailsContainer">
            </div>

            <div id="orderDetailTemplate" class="order-detail-item d-none">
                <hr />
                <div class="form-group">
                    <label>Article</label>

                    <select class="form-control" name="OrderDetails[0].ArticleId" onchange="updateArticleDetails(this)">
                    <option value="">-- Select an article --</option>
                    @if (ViewData["ArticleOptions"] != null){
                            foreach (var article in (IEnumerable<dynamic>)ViewData["ArticleOptions"])
                        {
                                <option value="@article.Value" data-name="@article.Name" data-description="@article.Desc" data-price="@article.Price">@article.Name</option>
                        }
                    }
                </select>
                </div>

                <div class="form-group">
                    <label>Nom de l'article</label>
                    <input class="form-control" name="OrderDetails[0].Article.Name" type="text" readonly />
                    <span asp-validation-for="OrderDetails[0].Article.Name" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Description de l'article</label>
                    <input class="form-control" name="OrderDetails[0].Article.Description" type="text" readonly />
                    <span asp-validation-for="OrderDetails[0].Article.Description" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Prix unitaire (€)</label>
                    <input class="form-control" name="OrderDetails[0].UnitPrice" type="text" readonly />
                    <span asp-validation-for="OrderDetails[0].UnitPrice" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Quantité</label>
                    <input class="form-control" name="OrderDetails[0].Quantity" type="number" min="1" />
                    <span asp-validation-for="OrderDetails[0].Quantity" class="text-danger"></span>
                </div>

                <button type="button" class="btn btn-danger remove-order-detail mt-2">Remove</button>
            </div>

            <button type="button" id="addOrderDetail" class="btn btn-secondary mt-3">Ajouter un détail de commande</button>

            @section Scripts {
                <script>
                    $(document).ready(function () {
                        let orderDetailIndex = 1;

                        $('#addOrderDetail').click(function () {
                            let newOrderDetail = $('#orderDetailTemplate').clone().removeClass('d-none');
                            newOrderDetail.attr('id', '');

                            newOrderDetail.find("input, select").each(function () {
                                let name = $(this).attr('name').replace('OrderDetails[' + orderDetailIndex + ']', 'OrderDetails[' + orderDetailIndex + 1 + ']');
                                $(this).attr('name', name);
                            });

                            $('#orderDetailsContainer').append(newOrderDetail);
                            orderDetailIndex++;
                        });

                        $(document).on('click', '.remove-order-detail', function () {
                            $(this).closest('.order-detail-item').remove();
                        });
                    });

                    function updateArticleDetails(selectElement) {
                        var selectedOption = selectElement.options[selectElement.selectedIndex];
                        var name = selectedOption.getAttribute("data-name");
                        var description = selectedOption.getAttribute("data-description");
                        var price = selectedOption.getAttribute("data-price");

                        // Mettre à jour les champs avec les informations de l'article sélectionné
                        $(selectElement).closest('.order-detail-item').find('input[name*="Article.Name"]').val(name);
                        $(selectElement).closest('.order-detail-item').find('input[name*="Article.Description"]').val(description);
                        $(selectElement).closest('.order-detail-item').find('input[name*="UnitPrice"]').val(price);
                    }
                </script>
            }
                    <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

